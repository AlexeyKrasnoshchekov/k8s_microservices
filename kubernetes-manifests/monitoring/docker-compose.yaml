services:
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    privileged: true

  # loki:
  #   image: grafana/loki:latest
  #   container_name: loki
  #   ports:
  #     - "3100:3100"
  #   volumes:
  #     - ./loki-config.yaml:/etc/loki/local-config.yaml

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - prometheusdata:/prometheus

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - GF_SMTP_ENABLED=true
  #     - GF_SMTP_HOST=smtp.gmail.com:587
  #     - GF_SMTP_USER=alexburnitdown@gmail.com
  #     - GF_SMTP_PASSWORD=trxd hkks wlgm cktg
  #     - GF_SMTP_FROM_ADDRESS=alexburnitdown@gmail.com
  #     - GF_SMTP_FROM_NAME=Grafana
  #   volumes:
  #     - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
  #     - grafanadata:/var/lib/grafana

  # backend:
  #   build: ./backend
  #   container_name: backend
  #   ports:
  #     - "8080:8080"
  # logging:
  #   driver: json-file
  #   options:
  #     tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
  #
  # myapp:
  #   image: alexkkk21/nextjsapp4:latest
  #   container_name: myapp
  #   ports:
  #     - "9999:8889"
  #   restart: always
  #   logging:
  #     driver: json-file
  #     options:
  #       tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
  #       max-size: "10m"
  #       max-file: "3"

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri=http://185.16.214.147:9999/nginx_status

  # telegraf:
  #   image: docker.io/telegraf:latest
  #   container_name: telegraf
  #   environment:
  #    - MQTT_USERNAME=${MQTT_USERNAME}
  #    - MQTT_PASSWORD=${MQTT_PASSWORD}
  #   volumes:
  #     - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
# volumes:
#   grafanadata:
#   prometheusdata:
